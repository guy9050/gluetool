---

- job:
    name: 'ci-rpmdiff-analysis'
    node: rpmdiff
    description: |
        RPMdiff analysis job

        Runs RPMdiff analysis of given brew task.
    concurrent: true
    display-name: 'ci-rpmdiff-analysis'
    parameters:
      - string:
          name: id
          default: ''
          description: 'Brew task ID.'
      - string:
          name: notify_recipients_options
          default: ''
          description: 'Additional options for notify-recipients module.'
    wrappers:
      - ansicolor:
          colormap: xterm
      - workspace-cleanup
    builders:
      - shell:
          citool -c -i -o citool-debug.txt
                 notify-recipients ${notify_recipients_options}
                 jenkins
                 testing-results
                 brew --id $id
                 brew-build-name
                 rpmdiff --type analysis
                 notify-ci-bus
    publishers:
      - archive:
          artifacts: '**/**'
          allow-empty: 'true'
      - groovy-postbuild:
          on-failure: "failed"
          script: |
              if (manager.getResult() == "SUCCESS") {
                  manager.listener.logger.println("[groovy-postbuild]: Success - cheching result of testing process");
                  manager.addBadge("success.gif", "CI pipeline finished successfully");
                  manager.createSummary("green.gif").appendText("<h1>CI pipeline finished successfully</h1>",
                                                                false, false, false, "green");

                  if (manager.logContains(".*result: Failed.*")) {
                      manager.listener.logger.println("[groovy-postbuild]: Tests failed");
                      manager.addBadge("delete.gif", "Tests FAILED");
                      manager.createSummary("red.gif").appendText("<h1>Tests failed</h1>",
                                                                  false, false, false, "red");

                  } else if (manager.logContains(".*result: Needs inspection.*")) {
                      manager.listener.logger.println("[groovy-postbuild]: Tests failed with needs inspection");
                      manager.addBadge("delete.gif", "Tests FAILED");
                      manager.createSummary("red.gif").appendText("<h1>Tests failed with needs inspection</h1>",
                                                                  false, false, false, "red");

                  } else if (manager.logContains(".*result: (Passed|Info).*")) {
                      manager.listener.logger.println("[groovy-postbuild]: Tests passed");
                      manager.addBadge("success.gif", "Tests PASSED");
                      manager.createSummary("green.gif").appendText("<h1>Tests passed</h1>",
                                                                    false, false, false, "green");

                  } else {
                      manager.listener.logger.println("[groovy-postbuild]: Cannot find result of the testing process");
                      manager.addBadge("warning.gif", "Tests result unknown");
                      manager.addShortText("UNKNOWN");
                      manager.createSummary("red.gif").appendText("<h1>Tests results are unknown</h1>",
                                                                  false, false, false, "red");
                  }
              } else {
                  manager.listener.logger.println("[groovy-postbuild]: Failure - giving up on result search");
                  manager.addBadge("error.gif", "CI pipeline crashed");
                  manager.addBadge("error.gif", "Tests did not run correctly");
                  manager.createSummary("red.gif").appendText("<h1>CI pipeline failed to finish</h1>",
                                                              false, false, false, "red");
                  manager.createSummary("red.gif").appendText("<h1>Tests did not run correctly</h1>",
                                                              false, false, false, "red");
              }
