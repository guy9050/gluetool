[tox]
envlist = py27-{unit-tests,static-analysis,static-analysis-coala,doctest}

[testenv]
sitepackages = False
deps = -rtest-requirements.txt
whitelist_externals = /usr/bin/ansible-playbook
                      sh
passenv = PYCURL_SSL_LIBRARY

setenv =
  ANSIBLE_CALLBACK_WHITELIST=profile_tasks
  ANSIBLE_STDOUT_CALLBACK=debug

[testenv:py27-unit-tests]
commands = /usr/bin/ansible-playbook inject-extra-requirements.yml
           pytest -vv -ra --ignore=docs/source/module_parsers.py -m 'not integration' {posargs}

[testenv:py27-static-analysis]
commands = /usr/bin/ansible-playbook inject-extra-requirements.yml
           pytest -vv -ra --pylint --flake8 --ignore=gluetool_modules/tests/ --ignore=docs/source/module_parsers.py -m 'not integration' {posargs}
           /bin/sh -c "yamllint -c .yamllint-moduleinfo $(find gluetool_modules/ -name *.moduleinfo)"

[testenv:py27-doctest]
commands = /usr/bin/ansible-playbook inject-extra-requirements.yml
           /usr/bin/ansible-playbook generate-docs.yml -e generate_dir="{envtmpdir}/docs"

[testenv:py27-static-analysis-coala]
whitelist_externals = {[testenv]whitelist_externals}
                      docker
commands = docker run -ti --rm -v {toxinidir}:/gluetool_modules:z --workdir=/gluetool_modules coala/base coala -c /gluetool_modules/.coafile --non-interactive

[testenv:py27-integration-tests]
commands = /usr/bin/ansible-playbook inject-extra-requirements.yml
           pytest -vv -ra --ignore=docs/source/module_parsers.py -m 'integration' {posargs}

[testenv:type-check]
whitelist_externals = bash
basepython = python3
skip_install = True
deps =
    mypy==0.720
    mypy-extensions==0.4.1
setenv =
    MYPYPATH = {envdir}/mypy-libs/gluetool:{envdir}/mypy-libs/citool
# mypy needs imported libraries to type-check our code, but gluetool, citool nor gluetool-modules cannot
# be installed under Python 3 yet. Therefore we need to "download" them, and set MYPYPATH to let mypy
# reach them.
commands = bash -c '[ -d {envdir}/mypy-libs ] || mkdir -p {envdir}/mypy-libs'
           bash -c '[ -d {envdir}/mypy-libs/gluetool ] || git clone --branch master --depth 1 https://github.com/gluetool/gluetool.git {envdir}/mypy-libs/gluetool'
           bash -c '[ -d {envdir}/mypy-libs/citool ] || git clone --branch master --depth 1 https://gitlab.cee.redhat.com/baseos-qe/citool.git {envdir}/mypy-libs/citool'

# --no-warn-unused-ignores: there are some unused warnings we cannot disable - they are used in Python 3, unused in
# Python 2 and vice versa.
#
# --implicit-reexport: `--strict` option enabled few important checks, among them activates `--no-implicit-reexport`
# which means no symbols from __all__ variables. This is a trouble since we import *a lot* things like gluetool.Module.
# Re-enabling it to make our life easier.
           mypy --config-file {toxinidir}/mypy.ini \
                --py2 \
                --strict \
                --no-warn-unused-ignores \
                --implicit-reexport \
                {toxinidir}/gluetool_modules/libs/ \
                {toxinidir}/gluetool_modules/helpers/ansible.py \
                {toxinidir}/gluetool_modules/helpers/guest_setup.py \
                {toxinidir}/gluetool_modules/helpers/rules_engine.py \
                {toxinidir}/gluetool_modules/static_analysis/rpminspect/rpminspect.py \
                {toxinidir}/gluetool_modules/testing/test_schedule_report.py \
                {toxinidir}/gluetool_modules/testing/test_schedule_runner.py \
                {toxinidir}/gluetool_modules/testing/test_schedule_runner_restraint.py \
                {toxinidir}/gluetool_modules/testing/test_schedule_runner_sti.py \
                {toxinidir}/gluetool_modules/infrastructure/bugzilla.py \
                {toxinidir}/gluetool_modules/infrastructure/pes.py \
                {toxinidir}/gluetool_modules/testing/test_schedule_tmt.py \
                {toxinidir}/gluetool_modules/testing/test_scheduler.py \
                {toxinidir}/gluetool_modules/testing/test_scheduler_beaker_xml.py \
                {toxinidir}/gluetool_modules/testing/test_scheduler_sti.py \
                {toxinidir}/gluetool_modules/provision/artemis.py \
                {posargs}
